---
- hosts: kubespray-ci-1
  become: true
  gather_facts: no
  vars:
    state: "present"

  tasks:
    - name: replace_test_id
      set_fact:
        test_name: "{{test_id |regex_replace('\\.', '-')}}"

    - set_fact:
        instance_names: >-
          {%- if mode in ['separate', 'ha'] -%}
          ["k8s-{{test_name}}-1", "k8s-{{test_name}}-2", "k8s-{{test_name}}-3"]
          {%- else -%}
          ["k8s-{{test_name}}-1", "k8s-{{test_name}}-2"]
          {%- endif -%}

    - name: Install libvirt packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - kvm
        - python-libvirt
        - python-lxml

    - name: Pick random subnet
      set_fact:
        test_subnet: "192.168.{{ 100 | random(seed=test_name) }}"

    - name: Define libvirt net
      virt_net:
        name: "k8s-{{test_name}}"
        command: define
        xml: '{{ lookup("template", "packet_net_template.xml.j2") }}'
      when: "{{ state == 'present' }}"

    - name: Start libvirt net
      virt_net:
        name: "k8s-{{test_name}}"
        command: define
      when: "{{ state == 'present' }}"

    - name: Create Virtual Machines | {{state}}
      virt:
        name: "{{ name }}"
        xml: "{{ lookup('template', 'packet_vm_template.xml.j2') }}"
      register: vms
      loop_control:
        index_var: vm_idx
        loop_var: name
      with_items: "{{instance_names}}"

    - debug:
        msg: "{{vms}}, {{inventory_path}}"
      when: "{{ state == 'present' }}"

    - name: Template the inventory
      template:
        src: ../templates/inventory-packet.j2
        dest: "{{ inventory_path }}"
      when: "{{ state == 'present' }}"

    - name: Wait for SSH to come up
      wait_for: host={{item.droplet.ip_address}} port=22 delay=10 timeout=180 state=started
      with_items: "{{droplets.results}}"
      when: "{{ state == 'present' }}"
